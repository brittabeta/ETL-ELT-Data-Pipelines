Run shell commands and applications from the terminal
# terminal, common line
Navigating Directories
cd
Explore directories on the cloud IDE Linux system using cd command
Special Paths
~ Home directory ~ = /home/theia
/ Root directory
. Current directory
.. Parent directory
/home/project Project directory special empty directory provided for my work
bin Child of the Root directory /bin child = inside
Change working directory to home directory
cd ~
Enter
~$
Changing working directory to root directory
cd /
Enter
/$
Changing working directory to child
cd bin
/bin$
Changing working directory back to home directory
cd ../home/theia
~$
(or)
(cd ~)
Changing working directory back to project directory
cd ../project
/home/project$
Browsing Directories
ls
Explore browsing content of directories using ls command, a special command the shell knows by default
View files in the current working directory
cd ~
ls
docker-compose         lib           README.md
dsdriver               node_modules  skills-network-extension-v0.1.0.tgz
entrypoint.sh          package.json  src-gen
gen-webpack.config.js  plugins       webpack.config.js
javasharedresources    postgres      yarn.lock
Go to home project directory
cd ../home/theia
cd ../project
ls
Nothing
Viewing files in any directory
Using the path to the directory: ls [PATH TO DIRECTORY]
ls /
bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var
boot  etc  lib   lib64  media   opt  root  sbin  sys  usr
Output = contents of root directory
Directory
/bin System libraries
/sbin Binaries that require root privileges
/usr User programs and data
/home Home directory
/media Removable media device directories
ls /bin
bash          chgrp          false     lesspipe    nisdomainname  sh.distrib  which
bunzip2       chmod          fgrep     ln          pidof          sleep       ypdomainname
bzcat         chown          findmnt   login       ping           stty        zcat
bzcmp         cp             fuser     ls          ping6          su          zcmp
bzdiff        dash           grep      lsblk       ps             sync        zdiff
bzegrep       date           gunzip    mkdir       pwd            tar         zegrep
bzexe         dd             gzexe     mknod       rbash          tempfile    zfgrep
bzfgrep       df             gzip      mktemp      readlink       touch       zforce
bzgrep        dir            hostname  more        rm             true        zgrep
bzip2         dmesg          kill      mount       rmdir          umount      zless
bzip2recover  dnsdomainname  less      mountpoint  rnano          uname       zmore
bzless        domainname     lessecho  mv          run-parts      uncompress  znew
bzmore        echo           lessfile  nano        sed            vdir
cat           egrep          lesskey   netstat     sh             wdctl
Output = contents of root directory, see ls, ls runs using the file /bin/ls
Updating and Installing Packages
Get latest packages information
sudo apt update
Output = fetch the latest package information from trusted sources
apt update does not update, just finds them
Updating nano
nano enables use of terminal as a text editor
Get latest supported version of nano
sudo apt upgrade nano
Output = Do you want to continue? [Y/n] n 
Abort.
Y capital = default, so Enter = y
Installing vim
vim another text-editing program, does not come with system, need to install
sudo apt install vim
Output = Do you want to continue? [Y/n] y
Output = install of vim
Creating and editing Files
Use nano to create and edit files
Navigating to project directory
cd /home/project
Auto-complete the path
cd /home/pr
Tab
Creating and editing a file
nano myprogram.py
Output = creates .py Python file called myprogram.py
Type to the file
print(‘Learning Linux is fun!’)
Ctrl x to exit
Output = Save modified buffer (ANSWERING “No” WILL DESTROY CHANGES) ?
Y Yes
N No   ^C Cancel
y
Enter
Output = saved to file myprogram.py
Run the Python file
ls
myprogram.py
Output = myprogram.py is in working directory
Run Python file
python3 myprogram.py
Learning Linux is fun!
Auto-compete 
python3 my
Tab
Learning Linux is fun!
Display content of /usr directory: ls /usr
bin  doc  games  include  lib  lib32  libx32  local  man  sbin  share  src
Navigate to the /media directory: cd /media
/media$
Navigate to /home/project directory and display contents: ls /home/project (or) cd /home/project then ls
myprogram.py
/media$ (or) /home/project$
Using nano, edit myprogram.py to add a new line containing ‘print(‘My name is…’): up arrow until nano myprogram.py Enter print(My name is Britta) ctrl X y to save enter to confirm file name
Look at, run, read, myprogram.py: python3 myprogram.py
My name is Britta
Learning Linux is fun!
Using vi create a file called done.py that prints “I am done with the lab!”: vi done.py then i then print(‘I am done with the lab!) ESC :wq Enter
Look at done.py: python3 done.py
Output:
File “done.py”, line 1
	print(‘I am done with the lab!)
Syntax error: EOL while scanning string literal (LOL I forgot ‘
Fix it: C edit ESC :wq python3 done.py
Thank you: https://www.cs.colostate.edu/helpdocs/vi.html 
I am done with the lab!
