# This script
# Extracts data from /etc/passwd file into a CSV file.
# The csv data file contains the user name, user id and 
# home directory of each user account defined in /etc/passwd
# Transforms the text delimiter from ":" to ",".
# Loads the data from the CSV file into a table in PostgreSQL database.

# Extract phase
echo "Extracting data"
# Extract the columns 1 (user name), 2 (user id) and 
# 6 (home directory path) from /etc/passwd
# cut -d":" -f1,3,6 /etc/passwd -to redirect extracted data into a file called extracted-data.txt
cut -d":" -f1,3,6 /etc/passwd > extracted-data.txt
# run the script: bash csv2db.sh

# verify file created: cat extracted-data.txt

# Transform phase
echo "Transforming data"
# read the extracted data and replace the colons with commas.
# tr ":" "," < extracted-data.txt
# verify output contains , in place of :
tr ":" "," < extracted-data.txt > transformed-data.csv
# run the script: bash csv2db.sh

# verify file transformed-data.csv is created and has content: cat transformed-data.csv

# Load phase
echo "Loading data"
# Send the instructions to connect to 'template1' and
# copy the file to the table 'users' through command pipeline.
echo "\c template1;\COPY users  FROM '/home/project/transformed-data.csv' DELIMITERS ',' CSV;" | psql --username=postgres --host=localhost

# execute the final script: bash csv2db.sh

# verify that the table users is poputlated with the data: echo '\c template1; \\SELECT * from users;' | psql --username=postgres --host=localhost
